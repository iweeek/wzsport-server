package com.wzsport.mapper;

import com.wzsport.model.AreaSport;
import com.wzsport.model.AreaSportExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectKey;
import org.apache.ibatis.annotations.Update;

public interface AreaSportMapper {

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table wzsport_area_sport
	 * @mbg.generated  Mon Jul 24 14:49:23 CST 2017
	 */
	long countByExample(AreaSportExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table wzsport_area_sport
	 * @mbg.generated  Mon Jul 24 14:49:23 CST 2017
	 */
	int deleteByExample(AreaSportExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table wzsport_area_sport
	 * @mbg.generated  Mon Jul 24 14:49:23 CST 2017
	 */
	@Delete({ "delete from wzsport_area_sport", "where id = #{id,jdbcType=BIGINT}" })
	int deleteByPrimaryKey(Long id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table wzsport_area_sport
	 * @mbg.generated  Mon Jul 24 14:49:23 CST 2017
	 */
	@Insert({ "insert into wzsport_area_sport (university_id, name, ", "is_enable, qualified_cost_time, ",
			"acquisition_interval, created_at, ", "updated_at)",
			"values (#{universityId,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, ",
			"#{isEnable,jdbcType=BIT}, #{qualifiedCostTime,jdbcType=INTEGER}, ",
			"#{acquisitionInterval,jdbcType=TINYINT}, #{createdAt,jdbcType=TIMESTAMP}, ",
			"#{updatedAt,jdbcType=TIMESTAMP})" })
	@SelectKey(statement = "SELECT LAST_INSERT_ID()", keyProperty = "id", before = false, resultType = Long.class)
	int insert(AreaSport record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table wzsport_area_sport
	 * @mbg.generated  Mon Jul 24 14:49:23 CST 2017
	 */
	int insertSelective(AreaSport record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table wzsport_area_sport
	 * @mbg.generated  Mon Jul 24 14:49:23 CST 2017
	 */
	List<AreaSport> selectByExample(AreaSportExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table wzsport_area_sport
	 * @mbg.generated  Mon Jul 24 14:49:23 CST 2017
	 */
	@Select({ "select", "id, university_id, name, is_enable, qualified_cost_time, acquisition_interval, ",
			"created_at, updated_at", "from wzsport_area_sport", "where id = #{id,jdbcType=BIGINT}" })
	@ResultMap("com.wzsport.mapper.AreaSportMapper.BaseResultMap")
	AreaSport selectByPrimaryKey(Long id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table wzsport_area_sport
	 * @mbg.generated  Mon Jul 24 14:49:23 CST 2017
	 */
	int updateByExampleSelective(@Param("record") AreaSport record, @Param("example") AreaSportExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table wzsport_area_sport
	 * @mbg.generated  Mon Jul 24 14:49:23 CST 2017
	 */
	int updateByExample(@Param("record") AreaSport record, @Param("example") AreaSportExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table wzsport_area_sport
	 * @mbg.generated  Mon Jul 24 14:49:23 CST 2017
	 */
	int updateByPrimaryKeySelective(AreaSport record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table wzsport_area_sport
	 * @mbg.generated  Mon Jul 24 14:49:23 CST 2017
	 */
	@Update({ "update wzsport_area_sport", "set university_id = #{universityId,jdbcType=BIGINT},",
			"name = #{name,jdbcType=VARCHAR},", "is_enable = #{isEnable,jdbcType=BIT},",
			"qualified_cost_time = #{qualifiedCostTime,jdbcType=INTEGER},",
			"acquisition_interval = #{acquisitionInterval,jdbcType=TINYINT},",
			"created_at = #{createdAt,jdbcType=TIMESTAMP},", "updated_at = #{updatedAt,jdbcType=TIMESTAMP}",
			"where id = #{id,jdbcType=BIGINT}" })
	int updateByPrimaryKey(AreaSport record);
}